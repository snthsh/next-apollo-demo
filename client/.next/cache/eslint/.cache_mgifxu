[{"/Users/santhoshss/Projects/next-apollo-demo/client/src/pages/_app.tsx":"1","/Users/santhoshss/Projects/next-apollo-demo/client/src/pages/about.tsx":"2","/Users/santhoshss/Projects/next-apollo-demo/client/src/pages/index.tsx":"3","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/__generated__/GetPersonList.ts":"4","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/__generated__/PersonTile.ts":"5","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/person-tile.tsx":"6","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/persons.tsx":"7","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/index.tsx":"8","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/loading.tsx":"9","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/page-container.tsx":"10"},{"size":682,"mtime":1657499679779,"results":"11","hashOfConfig":"12"},{"size":101,"mtime":1657499679780,"results":"13","hashOfConfig":"12"},{"size":116,"mtime":1657499679780,"results":"14","hashOfConfig":"12"},{"size":780,"mtime":1657499679770,"results":"15","hashOfConfig":"12"},{"size":442,"mtime":1657499679771,"results":"16","hashOfConfig":"12"},{"size":1038,"mtime":1657499679777,"results":"17","hashOfConfig":"12"},{"size":2461,"mtime":1657499679777,"results":"18","hashOfConfig":"12"},{"size":163,"mtime":1657499679772,"results":"19","hashOfConfig":"12"},{"size":1313,"mtime":1657499679773,"results":"20","hashOfConfig":"12"},{"size":739,"mtime":1657499679776,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h6vylq",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/santhoshss/Projects/next-apollo-demo/client/src/pages/_app.tsx",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/pages/about.tsx",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/pages/index.tsx",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/components/__generated__/GetPersonList.ts",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/components/__generated__/PersonTile.ts",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/components/person-tile.tsx",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/components/persons.tsx",["53"],[],"import React, { Fragment, useState} from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Col, Container, Row } from '@mverissimoo/emotion-grid';\nimport styled from '@emotion/styled';\nimport { lighten } from 'polished';\n\nimport{PersonTile, Loading} from './index'\nimport * as GetPersonListTypes from './__generated__/GetPersonList';\nimport {unit, colors, } from '../styles'\n\nexport const PERSON_TILE_DATA = gql`\n  fragment PersonTile on Person{\n    __typename\n    id\n    name\n    address\n    email\n    phoneNumber\n  }\n`;\n\nexport const GET_PERSONS = gql`\n  query GetPersonList($after: String) {\n    persons(after: $after) {\n      cursor\n      hasMore\n      persons {\n        ...PersonTile\n      }\n    }\n  }\n  ${PERSON_TILE_DATA}\n`;\n\nconst Persons = ({ }) => {\n  const { data, loading, error, fetchMore } = useQuery<GetPersonListTypes.GetPersonList, GetPersonListTypes.GetPersonListVariables>(GET_PERSONS);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  if (loading) return <Loading />;\n  if (error || !data) return <p>Error!</p>;\n\n  return (\n    <Fragment>\n      <Container>\n        <Row>\n          {data.persons &&\n            data.persons.persons &&\n            data.persons.persons.map((person: any) => (\n              <Col xs={4} sm={4} md={4} lg={3} xl={3}>\n                <PersonTile key={person.id} person={person} />\n              </Col>\n            ))}\n        </Row>\n      </Container>\n\n      {data.persons &&\n        data.persons.hasMore &&\n        (isLoadingMore ? (\n          <Loading />\n        ) : (\n          <Button\n            onClick={async () => {\n              setIsLoadingMore(true);\n              await fetchMore({ variables: { after: data.persons.cursor } });\n              setIsLoadingMore(false);\n            }}\n          >\n            Load more...\n          </Button>\n        ))}\n    </Fragment>\n  );\n};\n\nexport default Persons;\n\n/* STYLED COMPONENTS */\nconst height = 50;\nconst Button = styled.button({\n  display: 'block',\n  minWidth: 200,\n  height,\n  margin: '0 auto',\n  padding: `0 ${unit * 4}px`,\n  border: 'none',\n  borderRadius: height / 2,\n  fontFamily: 'inherit',\n  fontSize: 18,\n  lineHeight: `${height}px`,\n  fontWeight: 700,\n  color: 'white',\n  textTransform: 'uppercase',\n  backgroundColor: colors.accent,\n  cursor: 'pointer',\n  outline: 'none',\n  ':hover': {\n    backgroundColor: lighten(0.1, colors.accent),\n  },\n  ':active': {\n    backgroundColor: lighten(0.2, colors.accent),\n  },\n});","/Users/santhoshss/Projects/next-apollo-demo/client/src/components/index.tsx",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/components/loading.tsx",[],[],"/Users/santhoshss/Projects/next-apollo-demo/client/src/components/page-container.tsx",[],[],{"ruleId":"54","severity":2,"message":"55","line":49,"column":15,"nodeType":"56","messageId":"57","endLine":51,"endColumn":21},"react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","missingIterKey"]